USE DATABASE WALMART_DEV;

TRUNCATE TABLE WALSUP.SALES_INV_STORE_WKLY;

INSERT INTO WALSUP.SALES_INV_STORE_WKLY
(
	YR_NUM,
	WK_NUM,
	STORE_KEY,
	PROD_KEY,
	WK_SALES_QTY,
	AVG_SALES_PRICE,
	WK_SALES_AMT,
	WK_DISCOUNT,
	WK_SALES_COST,
	WK_SALES_MARGIN,
	EOP_STOCK_ON_HAND_QTY,
	EOP_ORDERED_STOCK_QTY,
	OUT_OF_STOCK_TIMES,
	IN_STOCK_TIMES,
	LOW_STOCK_TIMES,
	POTENTIAL_LOW_STOCK_IMPACT
)
SELECT
	C.YR_NUM AS YR_NUM,
	C.WK_NUM AS WK_NUM,
	S.STORE_KEY,
	S.PROD_KEY,
	SUM(SALES_QTY) AS WK_SALES_QTY,
	AVG(SALES_PRICE) AS AVG_SALES_PRICE,
	SUM(SALES_AMT) AS WK_SALES_AMT,
	SUM(DISCOUNT) AS WK_DISCOUNT,
	SUM(SALES_COST) AS WK_SALES_COST,
	SUM(SALES_MARGIN) AS WK_SALES_MARGIN,
	SUM(
		CASE
			WHEN C.DAY_OF_WK_NUM=6 THEN S.STOCK_ON_HAND_QTY
		ELSE 0
	END) AS EOP_STOCK_ON_HAND_QTY,
	SUM(
		CASE
			WHEN C.DAY_OF_WK_NUM=6 THEN S.ORDERED_STOCK_QTY
		ELSE 0
	END) AS EOP_ORDERED_STOCK_QTY,
	COUNT(
		CASE
			WHEN S.OUT_OF_STOCK_FLG=TRUE THEN 1
		ELSE 0
	END) AS OUT_OF_STOCK_TIMES,
	COUNT(
		CASE
			WHEN S.IN_STOCK_FLG=TRUE THEN 1
		ELSE 0
	END) AS IN_STOCK_TIMES,
	COUNT(
		CASE
			WHEN S.LOW_STOCK_FLG=TRUE THEN 1
		ELSE 0
	END) AS LOW_STOCK_TIMES,
	SUM(
		CASE
			WHEN S.LOW_STOCK_FLG=TRUE THEN (S.SALES_AMT - (S.STOCK_ON_HAND_QTY*S.SALES_PRICE))
		ELSE 0
	END) AS POTENTIAL_LOW_STOCK_IMPACT
	FROM WALSUP.SALES_INV_STORE_DAY AS S
	JOIN WALSUP.CALENDAR_DIM AS C USING(CAL_DT)
	GROUP BY 1,2,3,4
	ORDER BY 1,2,3,4
	;